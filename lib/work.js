// Generated by CoffeeScript 1.8.0
(function() {
  var AnimationWork, CSV, GraphicWork, IllustWork, MangaWork, NovelWork, Work,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CSV = require("comma-separated-values");

  Work = (function() {
    function Work(workId, title, entryDate, tags, evaluateCount, evaluateSum, viewCount, caption, isAdultOnly) {
      this.workId = workId;
      this.title = title;
      this.evaluateCount = evaluateCount;
      this.evaluateSum = evaluateSum;
      this.viewCount = viewCount;
      this.caption = caption;
      this.isAdultOnly = isAdultOnly;
      this.entryDate = entryDate instanceof Date ? entryDate : new Date(entryDate);
      this.tags = tags instanceof Array ? tags : tags.split(" ");
    }

    Work.parseSingle = function(rawCSV) {
      var c, l;
      c = new CSV(rawCSV);
      l = c.parse()[0];
      if (l[19] > 0) {
        return new MangaWork(l[0], l[3], l[12], l[13], l[15], l[16], l[17], l[18], l[26], l[4], l[6], l[9], l[19]);
      } else {
        return new IllustWork(l[0], l[3], l[12], l[13], l[15], l[16], l[17], l[18], l[26], l[4], l[6], l[9]);
      }
    };

    return Work;

  })();

  GraphicWork = (function(_super) {
    __extends(GraphicWork, _super);

    function GraphicWork(workId, title, entryDate, tags, evaluateCount, evaluateSum, viewCount, caption, isAdultOnly, serverNumber, smallThumbnail, middleThumbnail) {
      this.workId = workId;
      this.title = title;
      this.evaluateCount = evaluateCount;
      this.evaluateSum = evaluateSum;
      this.viewCount = viewCount;
      this.caption = caption;
      this.isAdultOnly = isAdultOnly;
      this.serverNumber = serverNumber;
      this.smallThumbnail = smallThumbnail;
      this.middleThumbnail = middleThumbnail;
      GraphicWork.__super__.constructor.call(this, this.workId, this.title, entryDate, tags, this.evaluateCount, this.evaluateSum, this.viewCount, this.caption, this.isAdultOnly);
    }

    return GraphicWork;

  })(Work);

  IllustWork = (function(_super) {
    __extends(IllustWork, _super);

    function IllustWork(workId, title, entryDate, tags, evaluateCount, evaluateSum, viewCount, caption, isAdultOnly, serverNumber, smallThumbnail, middleThumbnail) {
      this.workId = workId;
      this.title = title;
      this.evaluateCount = evaluateCount;
      this.evaluateSum = evaluateSum;
      this.viewCount = viewCount;
      this.caption = caption;
      this.isAdultOnly = isAdultOnly;
      this.serverNumber = serverNumber;
      this.smallThumbnail = smallThumbnail;
      this.middleThumbnail = middleThumbnail;
      IllustWork.__super__.constructor.call(this, this.workId, this.title, entryDate, tags, this.evaluateCount, this.evaluateSum, this.viewCount, this.caption, this.isAdultOnly, this.serverNumber, this.smallThumbnail, this.middleThumbnail);
    }

    return IllustWork;

  })(GraphicWork);

  MangaWork = (function(_super) {
    __extends(MangaWork, _super);

    function MangaWork(workId, title, entryDate, tags, evaluateCount, evaluateSum, viewCount, caption, isAdultOnly, serverNumber, smallThumbnail, middleThumbnail, pageCount) {
      this.workId = workId;
      this.title = title;
      this.evaluateCount = evaluateCount;
      this.evaluateSum = evaluateSum;
      this.viewCount = viewCount;
      this.caption = caption;
      this.isAdultOnly = isAdultOnly;
      this.serverNumber = serverNumber;
      this.smallThumbnail = smallThumbnail;
      this.middleThumbnail = middleThumbnail;
      this.pageCount = pageCount;
      MangaWork.__super__.constructor.call(this, this.workId, this.title, entryDate, tags, this.evaluateCount, this.evaluateSum, this.viewCount, this.caption, this.isAdultOnly, this.serverNumber, this.smallThumbnail, this.middleThumbnail);
    }

    return MangaWork;

  })(GraphicWork);

  AnimationWork = (function(_super) {
    __extends(AnimationWork, _super);

    function AnimationWork() {
      return AnimationWork.__super__.constructor.apply(this, arguments);
    }

    return AnimationWork;

  })(GraphicWork);

  NovelWork = (function(_super) {
    __extends(NovelWork, _super);

    function NovelWork() {
      return NovelWork.__super__.constructor.apply(this, arguments);
    }

    return NovelWork;

  })(Work);

  module.exports = {
    Work: Work,
    GraphicWork: GraphicWork,
    IllustWork: IllustWork,
    MangaWork: MangaWork,
    AnimationWork: AnimationWork,
    NovelWork: NovelWork
  };

}).call(this);
